import java.nio.charset.StandardCharsets

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
plugins {
    id 'java'
}

group 'com.selenium.marionette'
version '1.0.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

compileJava.options.encoding = StandardCharsets.UTF_8
compileTestJava.options.encoding = StandardCharsets.UTF_8

repositories {
        mavenCentral()
}

tasks.withType(JavaCompile) {
    options.compilerArgs <<
            "-Xlint:all" <<
            "-Xlint:-processing" <<
            "-Xlint:-serial"
}

ext {
    assertjVersion = '3.6.2'
    testngVersion = '7.1.0'
    seleniumVersion = '3.141.59'
    logbackVersion = '1.2.3'
    commonsLangVersion ='3.0'
    apacheCommonsIoVersion = '1.3.2'

    suiteFileNsgTi = project.hasProperty('nsg-ti')
    suiteFileNsgTu = project.hasProperty('nsg-tu')
    suiteFile = ''
}

clean {
    delete 'buildDir', 'target'
}

dependencies {

    compile "org.testng:testng:${testngVersion}"
    compile "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    compile "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
    compile "org.apache.commons:commons-lang3:${commonsLangVersion}"
    compile "org.apache.commons:commons-io:${apacheCommonsIoVersion}"

    testImplementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
    testImplementation "org.seleniumhq.selenium:selenium-api:${seleniumVersion}"
    testImplementation "ch.qos.logback:logback-classic:${logbackVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
}

test {

    useTestNG(){

        // To generate reports by TestNG library
        useDefaultListeners = true

        suiteFile = './src/test/testng-run/marionette-testng-run.xml'

        def dir = System.getProperty("testngReportOutput")
        outputDirectory = dir ? file(dir) : file("target/testng-output")
        suites suiteFile
    }

    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }

    // turn off Gradle's HTML report to avoid replacing the
    // reports generated by TestNG library
    reports.html.enabled = false
}